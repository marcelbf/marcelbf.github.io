<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unit Test on Marcelbf</title>
    <link>https://marcelbf.github.io/tags/unit-test/</link>
    <description>Recent content in Unit Test on Marcelbf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 03 May 2019 10:22:16 +1200</lastBuildDate>
    
	<atom:link href="https://marcelbf.github.io/tags/unit-test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unit Test</title>
      <link>https://marcelbf.github.io/posts/unit-test/</link>
      <pubDate>Fri, 03 May 2019 10:22:16 +1200</pubDate>
      
      <guid>https://marcelbf.github.io/posts/unit-test/</guid>
      <description>How to Create a unit test There&amp;rsquo;s a simple pattern called AAA - Arrange, Act, Assert.
Arrange: Create the data and parameters you need to execute the code you want to test.
Act: Call the code you want to test.
Assert: Assert if the result is the expected.
I will show bellow how to create a unit test following this pattern and using SysTest framework.
SysTest Framework In a nutshell: - Any data you generate during the execution will not persist.</description>
    </item>
    
  </channel>
</rss>