<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Marcelbf</title>
		<link>https://marcelbf.github.io/posts/</link>
		<description>Recent content in Posts on Marcelbf</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Mon, 15 Apr 2019 09:42:45 +1200</lastBuildDate>
		<atom:link href="https://marcelbf.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Testing</title>
			<link>https://marcelbf.github.io/posts/testing/</link>
			<pubDate>Mon, 15 Apr 2019 09:42:45 +1200</pubDate>
			
			<guid>https://marcelbf.github.io/posts/testing/</guid>
			<description>Testing automation There are several testing capabilities for Dynamics AX Dynamics 365 for Finance and Operations (D365FO). It is import to understand the value of automate testing and where to use which tool/technique.
You can&amp;rsquo;t avoid, at some point you will have to test your solution.
Ideally, after every change in your system you will have to test it again. If you have to go over the same process multiple times, why not automate to save some time and money ?</description>
			<content type="html"><![CDATA[

<h1 id="testing-automation">Testing automation</h1>

<p>There are several testing capabilities for <s>Dynamics AX</s> Dynamics 365 for Finance and Operations (D365FO). It is import to understand the value of automate testing and where to use which tool/technique.</p>

<p><b>You can&rsquo;t avoid, at some point you will have to test your solution.</b></p>

<p>Ideally, after every change in your system you will have to test it again. If you have to go over the same process multiple times, why not automate to save some time and money ?</p>

<h2 id="the-testing-pyramid">The testing pyramid</h2>

<p>Thinking about Return Of Investment (ROI), the ideal number of tests you have in your environment is:
<img src="/img/testpyramid.PNG" alt="The testing pyramid" /></p>

<p>Unit tests are very small and fast to run - that&rsquo;s why you want to have lots of these. Business cycle tests are slow to execute and hard to maintain.</p>

<hr />

<p><b>Unit test:</b> It validates if a unit of your X++ code behaves as expected.</p>

<p><b>Component test:</b> It validates if your component works as expected and met the functional requirements (of the component).</p>

<p><b>Integration test:</b> Validates the interactions between several components. Validates the functional requirements.</p>

<p><b>Business cycle test:</b> Validates end to end scenarios. Simulates a real user and validates the functional requirements.</p>

<hr />

<h2 id="the-rsat-tool">The RSAT tool</h2>

<p>Microsoft released a Regression Suite Automation Tool (RSAT). It is a great tool to automate some of your tests, but <b>be aware</b>, this should be used for Business cycle testing.</p>

<p><b>RSAT tool will simulate the user and perform all actions through the UI. It means it is slow to run.</b></p>

<p>If you have X++ customization in your D365 project you definitely should be doing unit, component and integration testing using SysTest, not only RSAT.</p>
]]></content>
		</item>
		
		<item>
			<title>Hello World</title>
			<link>https://marcelbf.github.io/posts/hello-world/</link>
			<pubDate>Wed, 03 Apr 2019 21:37:03 +1300</pubDate>
			
			<guid>https://marcelbf.github.io/posts/hello-world/</guid>
			<description>Hello world. This is my first post!
{ info(&amp;quot;Hello World!&amp;quot;); }  </description>
			<content type="html"><![CDATA[<p>Hello world.
This is my first post!</p>

<pre><code>{
  info(&quot;Hello World!&quot;);  
}
</code></pre>
]]></content>
		</item>
		
	</channel>
</rss>
